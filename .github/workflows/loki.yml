name: loki
on:
  release:	
    types:	
      - "published"	
      - "edited"
      - "prereleased"
  push:
    branches:
      - "master"
      - "actions/release_android__*"
    paths:
      - "photochatapp/pubspec.yaml"
      - "photochatapp/android/fastlane/Fastfile"
      - ".github/workflows/loki.yml"
      - "photochatapp/android/Gemfile"
      - "photochatapp/android/Gemfile.lock"
jobs:
  release-docs:
    name: release app docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install dart sdk
        run: |
          apt update -y
          apt install -y apt-transport-https
          sh -c 'wget -qO- https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -'
          sh -c 'wget -qO- https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list'
          apt update -y
          apt install -y dart
      - name: generate docs
        working-directory: ./photochatapp
        run: |
          export PATH="$PATH:/usr/lib/dart/bin"
          dartdoc
      - name: upload docs
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          cd photochatapp
          mkdir -p ~/upload
          cp -r doc/api ~/upload/docs
          cd ~/upload/docs
          touch .nojekyll
          git config --global user.email "tianhaoz@umich.edu"
          git config --global user.name "Tianhao Zhou"
          git init
          git add -A
          git commit -m "docs: update"
          git remote add origin https://github.com/MiniDonkey/app-doc.git
          echo "machine github.com login tianhaoz95 password $GITHUB_TOKEN" > ~/.netrc
          git push -u -f origin master
  release-android:
    name: release android app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: check triggering event type
        env:
          TRIGGER_EVENT_NAME: ${{ github.event_name }}
          TRIGGER_EVENT: ${{ toJson(github.event) }}
          TRIGGER_EVENT_IS_PRERELEASE: ${{ github.event.release.prerelease }}
          TRIGGER_EVENT_IS_DRAFT: ${{ github.event.release.draft }}
        run: |
          echo "triggering event type: $TRIGGER_EVENT_NAME"
          echo "is prerelease: $TRIGGER_EVENT_IS_PRERELEASE"
          echo "is draft: $TRIGGER_EVENT_IS_DRAFT"
          echo "full event: $TRIGGER_EVENT"
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.12.13+hotfix.5'
          channel: 'stable'
      - name: upgrade flutter
        run: |
          flutter channel stable
          flutter upgrade
      - name: install gem packages
        run: |
          cd photochatapp/android
          gem install bundler:1.17.3
          bundle install
          bundle exec fastlane install_plugins
          bundle exec fastlane update_plugins
      - name: build apk and app bundle package
        env:
          ANDROID_SIGN_PWD: ${{ secrets.ANDROID_SIGN_PWD }}
          SECRET_REPO: ${{ secrets.SECRET_REPO }}
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          ./scripts/setenv.sh
          cd ./photochatapp
          flutter pub get
          flutter test
          flutter build appbundle
      - name: upload app to Google Play Store
        env:
          ANDROID_SIGN_PWD: ${{ secrets.ANDROID_SIGN_PWD }}
          SECRET_REPO: ${{ secrets.SECRET_REPO }}
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          ./scripts/setenv.sh
          cd ./photochatapp/android
          bundle exec fastlane internal
          sleep 5
      - name: promote to alpha
        env:
          ANDROID_SIGN_PWD: ${{ secrets.ANDROID_SIGN_PWD }}
          SECRET_REPO: ${{ secrets.SECRET_REPO }}
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
          TRIGGER_EVENT: ${{ github.event_name }}
        run: |
          cd ./photochatapp/android
          bundle exec fastlane alpha
      - name: promote to beta
        if: contains(github.event_name,'release')
        env:
          ANDROID_SIGN_PWD: ${{ secrets.ANDROID_SIGN_PWD }}
          SECRET_REPO: ${{ secrets.SECRET_REPO }}
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          cd ./photochatapp/android
          bundle exec fastlane beta
      - name: promote to production
        if: contains(github.event_name,'release')&&(!github.event.release.prerelease)
        env:
          ANDROID_SIGN_PWD: ${{ secrets.ANDROID_SIGN_PWD }}
          SECRET_REPO: ${{ secrets.SECRET_REPO }}
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          cd ./photochatapp/android
          bundle exec fastlane production
