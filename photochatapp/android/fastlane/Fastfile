default_platform(:android)

platform :android do
  desc "submit to internal track in Google Play Store"
  lane :internal do
    begin
      gradle(task: 'bundle', build_type: 'Release')
      upload_to_play_store(
        track: 'internal',
        version_code: flutter_version()["version_code"],
        aab: '../build/app/outputs/bundle/release/app-release.aab',
        skip_upload_screenshots: true,
        skip_upload_images: true
      )
    rescue => exception
      raise exception unless exception.message.include?('APK specifies a version code that has already been used.')
      puts 'Current version already present on the Play Store. Omitting this upload.'
    end
  end

  desc "promote to alpha track in Google Play Store"
  lane :alpha do
    begin
      gradle(task: 'bundle', build_type: 'Release')
      upload_to_play_store(
        track: 'internal',
        version_code: flutter_version()["version_code"],
        track_promote_to: 'alpha',
        skip_upload_aab: true,
        skip_upload_screenshots: true,
        skip_upload_images: true
      )
    end
  end
  
  desc "promote to alpha track in Google Play Store"
  lane :beta do
    begin
      gradle(task: 'bundle', build_type: 'Release')
      upload_to_play_store(
        track: 'internal',
        version_code: flutter_version()["version_code"],
        track_promote_to: 'beta',
        skip_upload_aab: true,
        skip_upload_screenshots: true,
        skip_upload_images: true
      )
    end
  end

  desc "promote to production track in Google Play Store"
  lane :production do
    begin
      gradle(task: 'bundle', build_type: 'Release')
      upload_to_play_store(
        track: 'alpha',
        version_code: flutter_version()["version_code"],
        track_promote_to: 'production',
        skip_upload_aab: true,
        skip_upload_screenshots: true,
        skip_upload_images: true
      )
    end
  end
end
